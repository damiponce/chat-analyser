(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[405],{8312:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/",function(){return t(2721)}])},2721:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return pe}});var r=t(4051),i=t.n(r),a=t(5893),o=t(9008),s=t.n(o),l=t(7294),d=t(9608),u=t(6658),c=t.n(u);var f=function(e){var n=e.condition,t=e.message,r=e.color;return n?(0,a.jsxs)("div",{className:c().main,children:[(0,a.jsx)(d.GooSpinner,{color:null!==r&&void 0!==r?r:"#fff"}),(0,a.jsx)("span",{className:c().message,style:{color:null!==r&&void 0!==r?r:"#fff"},children:t.toString()})]}):null},p=t(9429),h=t.n(p),m=t(6214),y=t(8992),x=t.n(y),g=function(e){var n=new(h())({restrictions:{maxNumberOfFiles:1,allowedFileTypes:[".txt"]},autoProceed:!0});return n.on("upload-success",(function(e,n){console.log(e)})),n.on("error",(function(e){console.error(e.stack)})),n.on("upload-progress",(function(e,n){console.log(e.id,n.bytesUploaded,n.bytesTotal)})),n.on("file-added",(function(n){e.onFileAdded(n)})),(0,a.jsx)("div",{className:"card",children:e.currentMessage?(0,a.jsx)("div",{className:"uppy-DragDrop-container uppy-DragDrop--isDragDropSupported",children:(0,a.jsx)("h1",{className:"uppy-DragDrop-inner "+x().message,children:e.currentMessage})}):(0,a.jsx)(m.v0,{uppy:n,locale:{strings:{dropHereOr:"Drop here or %{browse}",browse:"browse"}}})})},_=t(1633),v=t.n(_),b=t(2683),w=t(8023);function j(e){var n=e.refProp,t=e.frontCard,r=e.backCard,i=e.frontButton,o=e.backButton,s=function(e){var n=e,t=e;return(0,a.jsx)("span",{children:n})||t};return(0,a.jsxs)("div",{className:"card",ref:n,children:[(0,a.jsxs)("div",{className:"card-front",children:[t,(0,a.jsx)("button",{className:"card-flip-button",onClick:function(e){Array.from(e.currentTarget.parentElement.parentElement.children).forEach((function(e){return e.classList.add("flip")}))},children:s(i)})]}),(0,a.jsxs)("div",{className:"card-back",children:[r,(0,a.jsx)("button",{className:"card-flip-button",onClick:function(e){Array.from(e.currentTarget.parentElement.parentElement.children).forEach((function(e){return e.classList.remove("flip")}))},children:s(o)})]})]})}var k=t(8649),S=t(2168),T=t(9652),A=t(580),M=t(1788),O=t(9223),P=t(8534);function D(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}function C(e){return function(e){if(Array.isArray(e))return D(e)}(e)||function(e){if("undefined"!==typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,n){if(!e)return;if("string"===typeof e)return D(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(t);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return D(e,n)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function E(e){var n,t=e.width,r=e.height,i=e.data,o=e.events,s=void 0!==o&&o,d=e.margin,u=void 0===d?{left:45,top:5,right:20,bottom:60}:d,c=(e.labels,function(e){var n=e;return e.hour||n.day}),f=function(e){return e.mean},p=t-u.left-u.right,h=r-u.bottom,m=(0,l.useMemo)((function(){return(0,T.Z)({range:[0,p],round:!0,domain:i.map((function(e){return String(c(e))})),padding:.4})}),[p]),y=(0,l.useMemo)((function(){return(0,A.Z)({range:[h,0],round:!0,domain:[0,(n=Math).max.apply(n,C(i.map(f)))]})}),[h]),x="#337cff";return t<10?null:(0,a.jsx)("svg",{width:t,height:r,children:(0,a.jsxs)(S.Z,{left:45,top:u.top,children:[(0,a.jsx)(S.Z,{children:i.map((function(e){var n,t=String(c(e)),r=m.bandwidth(),i=h-(null!==(n=y(f(e)))&&void 0!==n?n:0),o=m(t),l=h-i;return(0,a.jsx)(k.Z,{x:o,y:l,width:r,height:i+r/4,rx:r/4,fill:x,onClick:function(){s&&alert("clicked: ".concat(JSON.stringify(Object.values(e))))},clipPath:"inset(0 0 ".concat(r/4," 0)")},"bar-".concat(t))}))}),(0,a.jsx)(P.Z,{scale:y,width:p,height:h,stroke:x+"44",strokeDasharray:"2 2"}),(0,a.jsx)(M.Z,{scale:y,stroke:x,tickStroke:x,hideAxisLine:!0,hideTicks:!0,tickLabelProps:function(){return{fontSize:11,textAnchor:"end",dy:"0.33em",fill:x}}}),(0,a.jsx)(O.Z,{top:h,scale:m,stroke:x,tickStroke:x,hideAxisLine:!0,tickFormat:function(e){return 7===i.map(c).length?p>650?e:String(e).charAt(0):parseInt(e)<24?e:void 0},hideZero:!0,tickValues:24===i.map(c).length?p>750?["0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23"]:["0","2","4","6","8","10","12","14","16","18","20","22"]:void 0,tickLabelProps:function(){return{fontSize:11,textAnchor:"middle",dy:"0.33em",fill:x}}})]})})}var L=t(2938),B=t(4370),N=t(3382);function Z(e){var n=e.label,t=e.checked,r=e.onChange,i=(0,l.useState)(t);i[0],i[1];return(0,a.jsx)("div",{className:"checkbox-button",style:{top:"-69.8281px",right:"90px",display:"flex",alignItems:"center"},children:(0,a.jsxs)("label",{style:{display:"flex",alignItems:"center"},children:[(0,a.jsx)("input",{type:"checkbox",onChange:function(){r(!t)}}),(0,a.jsx)("svg",{className:"checkbox ".concat(t?"checkbox--active":""),"aria-hidden":"true",viewBox:"0 0 15 11",fill:"none",children:(0,a.jsx)("path",{style:{transform:"scale(1.2) translate(0px, -3.1px)"},d:"M 2 6 L 6 10.8 L 15 1",strokeWidth:"2",stroke:t?"#85afff":"none"})}),(0,a.jsx)("span",{style:{fontFamily:"Lexend",fontSize:"0.8rem",verticalAlign:"middle",color:"#85afff",fontWeight:500},children:n})]})})}function I(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}function F(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function z(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},r=Object.keys(t);"function"===typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),r.forEach((function(n){F(e,n,t[n])}))}return e}function H(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,i,a=[],o=!0,s=!1;try{for(t=t.call(e);!(o=(r=t.next()).done)&&(a.push(r.value),!n||a.length!==n);o=!0);}catch(l){s=!0,i=l}finally{try{o||null==t.return||t.return()}finally{if(s)throw i}}return a}}(e,n)||U(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function R(e){return function(e){if(Array.isArray(e))return I(e)}(e)||function(e){if("undefined"!==typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||U(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function U(e,n){if(e){if("string"===typeof e)return I(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(t):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?I(e,n):void 0}}var q=(0,B.Z)((function(e){var n,t,r,i,o,s=e.width,d=e.height,u=e.data,c=(e.events,e.margin),f=void 0===c?{left:45,top:60,right:20,bottom:60}:c,p=e.labels,h=e.tooltipOpen,m=e.tooltipLeft,y=e.tooltipTop,x=e.tooltipData,g=e.showTooltip,_=e.hideTooltip,v=H(l.useState(!0),2),b=v[0],w=v[1],j=function(e){var n=e;return e.hour||n.day},k=function(e){return e.lwhisk},D=function(e){return e.uwhisk},C=function(e){return e.median},E=function(e){return e.q1},B=function(e){return e.q3},I=function(e){return null!==(o=e.outliers)&&void 0!==o?o:void 0},F=s-f.left-f.right,U=d-f.top-f.bottom,q=(0,l.useMemo)((function(){return(0,T.Z)({range:[0,F],round:!0,domain:u.map((function(e){return String(j(e))})),padding:.4})}),[F]),V=(n=Math).min.apply(n,R(u.map((function(e){return e.min})))),J=(t=Math).max.apply(t,R(u.map((function(e){return e.max})))),Y=(r=Math).min.apply(r,R(u.map((function(e){return e.lwhisk})))),Q=(i=Math).max.apply(i,R(u.map((function(e){return e.uwhisk})))),W=(0,l.useMemo)((function(){return(0,A.Z)({range:[U,0],round:!0,domain:[V,J]})}),[U]),$=(0,l.useMemo)((function(){return(0,A.Z)({range:[U,0],round:!0,domain:[Y,Q]})}),[U]),K=q.bandwidth(),X=Math.min(40,K),G="#337cff";return s<10?null:(0,a.jsxs)("div",{style:{position:"relative"},children:[(0,a.jsx)(Z,{label:"OUTLIERS",checked:b,onChange:w}),(0,a.jsxs)("svg",{width:s,height:d,children:[(0,a.jsx)("rect",{x:0,y:0,width:s,height:d,fill:"#0000"}),(0,a.jsxs)(S.Z,{left:0,top:f.top,children:[(0,a.jsx)(S.Z,{children:u.map((function(e){return(0,a.jsx)(L.Z,{min:k(e),max:D(e),left:q(String(j(e))),firstQuartile:E(e),thirdQuartile:B(e),median:C(e),boxWidth:K,fill:G,fillOpacity:.3,stroke:G,strokeWidth:2,valueScale:b?W:$,rx:K/16,ry:K/16,outliers:b?I(e):[],minProps:{onMouseOver:function(){var n;g({tooltipTop:null!==(n=W(k(e)))&&void 0!==n?n:40,tooltipLeft:q(String(j(e)))+X+5,tooltipData:{min:k(e),name:String(j(e))}})},onMouseLeave:function(){_()}},maxProps:{onMouseOver:function(){var n;g({tooltipTop:null!==(n=W(D(e)))&&void 0!==n?n:40,tooltipLeft:q(String(j(e)))+X+5,tooltipData:{max:D(e),name:String(j(e))}})},onMouseLeave:function(){_()}},boxProps:{onMouseOver:function(){var n;g({tooltipTop:null!==(n=W(C(e)))&&void 0!==n?n:40,tooltipLeft:q(String(j(e)))+X+5,tooltipData:z({},e,{name:String(j(e))})})},onMouseLeave:function(){_()}},medianProps:{style:{stroke:G},onMouseOver:function(){var n;g({tooltipTop:null!==(n=W(C(e)))&&void 0!==n?n:40,tooltipLeft:q(String(j(e)))+X+5,tooltipData:{median:C(e),name:String(j(e))}})},onMouseLeave:function(){_()}},outlierProps:{style:{},onMouseOver:function(){var n;g({tooltipTop:null!==(n=W(C(e)))&&void 0!==n?n:40,tooltipLeft:q(String(j(e)))+X+5,tooltipData:{outlier:I(e),name:String(j(e))}})},onMouseLeave:function(){_()}}},e.hour||e.day)}))}),(0,a.jsx)(P.Z,{scale:W,width:F,height:U,stroke:G+"44",strokeDasharray:"2 2"}),(0,a.jsx)("text",{x:0,y:0,transform:"translate(".concat(-35,", ").concat(U/2,") rotate(-90)"),fill:G,fontSize:13,textAnchor:"middle",children:p.y}),(0,a.jsx)(M.Z,{scale:W,stroke:G,tickStroke:G,hideAxisLine:!0,hideTicks:!0,tickLabelProps:function(){return{fontSize:11,textAnchor:"end",dy:"0.33em",fill:G}}}),(0,a.jsx)(O.Z,{top:U,scale:q,stroke:G,tickStroke:G,hideAxisLine:!0,tickLabelProps:function(){return{fontSize:11,textAnchor:"middle",dy:"0.33em",fill:G}}})]})]}),h&&x&&(0,a.jsxs)(N.Z,{top:y,left:m,style:z({},N.j,{backgroundColor:"#283238",color:"white"}),children:[(0,a.jsx)("div",{children:(0,a.jsx)("strong",{children:x.name})}),(0,a.jsxs)("div",{style:{marginTop:"5px",fontSize:"12px"},children:[x.max&&(0,a.jsxs)("div",{children:["Upper whisker: ",x.max]}),x.thirdQuartile&&(0,a.jsxs)("div",{children:["Third quartile: ",x.thirdQuartile]}),x.median&&(0,a.jsxs)("div",{children:["Median: ",x.median]}),x.firstQuartile&&(0,a.jsxs)("div",{children:["First quartile: ",x.firstQuartile]}),x.min&&(0,a.jsxs)("div",{children:["Lower whisker: ",x.min]}),x.outlier&&(0,a.jsxs)("div",{children:["Outlier: ",x.outlier]})]})]})]})})),V=t(5942),J=t(1139),Y=t(4177),Q=t(272),W=t(4398);function $(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}function K(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function X(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},r=Object.keys(t);"function"===typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),r.forEach((function(n){K(e,n,t[n])}))}return e}function G(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,i,a=[],o=!0,s=!1;try{for(t=t.call(e);!(o=(r=t.next()).done)&&(a.push(r.value),!n||a.length!==n);o=!0);}catch(l){s=!0,i=l}finally{try{o||null==t.return||t.return()}finally{if(s)throw i}}return a}}(e,n)||ne(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ee(e){return function(e){if(Array.isArray(e))return $(e)}(e)||function(e){if("undefined"!==typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||ne(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ne(e,n){if(e){if("string"===typeof e)return $(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(t):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?$(e,n):void 0}}var te=(0,B.Z)((function(e){var n=e.width,t=e.height,r=e.data,i=e.events,o=void 0!==i&&i,s=e.margin,d=void 0===s?{left:45,top:5,right:20,bottom:60}:s,u=e.labels,c=(e.tooltipOpen,e.tooltipLeft,e.tooltipTop,e.tooltipData,e.showTooltip,e.hideTooltip,function(e,n){var t;return(t=Math).max.apply(t,ee(e.map(n)))}),f="#337cff",p=function(e){return e.bins},h=function(e){return e.count},m=c(r,(function(e){return c(p(e),h)})),y=c(r,(function(e){return p(e).length})),x=(0,A.Z)({domain:[0,r.length]}),g=(0,A.Z)({domain:[0,y]}),_=((0,A.Z)({range:["#77312f","#f33d15"],domain:[0,m]}),(0,A.Z)({range:["#122549","#b4fbde"],domain:[0,m]}),n-d.left-d.right),v=t-d.bottom,b=_/r.length,w=v/y;x.range([0,_]),g.range([0,v]);var j,k,T=G(l.useState(.4),2),P=T[0],D=T[1],C=(0,Y.ZP)().exponent(P).domain([0,1]),E=(0,Q.ZP)().domain([0,m]).interpolator((function(e){return(0,J.yy)(C(e))}));return n<10?null:(0,a.jsxs)("div",{style:{position:"relative"},children:[(0,a.jsx)("svg",{width:n,height:t,children:(0,a.jsxs)(S.Z,{left:45,top:d.top,children:[(0,a.jsx)(S.Z,{children:(0,a.jsx)(V.Z,{data:r,xScale:function(e){return null!==(j=x(e))&&void 0!==j?j:0},yScale:function(e){return null!==(k=g(e))&&void 0!==k?k:0},colorScale:E,binWidth:b,binHeight:w,gap:2,children:function(e){return e.map((function(e){return e.map((function(e){return(0,a.jsx)("rect",{className:"visx-heatmap-rect",width:e.width,height:e.height,x:e.x,y:e.y,fill:e.color,onClick:function(){if(o){var n=e.row,t=e.column;alert(JSON.stringify({row:n,column:t,bin:e.bin}))}}},"heatmap-rect-".concat(e.row,"-").concat(e.column))}))}))}})}),(0,a.jsx)("text",{x:0,y:0,transform:"translate(".concat(-35,", ").concat(v/2,") rotate(-90)"),fill:f,fontSize:13,textAnchor:"middle",children:u.y}),(0,a.jsx)(M.Z,{scale:g,stroke:f,tickStroke:f,hideAxisLine:!0,hideTicks:!0,numTicks:y,tickFormat:function(e){return[null,180,120,60,30,10,5,2,1,0][e]},tickLabelProps:function(){return{fontSize:11,textAnchor:"end",dy:"0.33em",fill:f}}}),(0,a.jsx)(O.Z,{top:v,scale:x,stroke:f,hideAxisLine:!0,tickStroke:f,left:b/2,tickFormat:function(e){return e<24?e:null},tickValues:_>750?[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]:[0,2,4,6,8,10,12,14,16,18,20,22],tickLabelProps:function(){return{fontSize:11,textAnchor:"middle",dy:"0.33em",fill:f}}})]})}),(0,a.jsx)("div",{className:"heatmap-slider",children:(0,a.jsx)(W.Range,{step:1e-4,min:.1,max:1,values:[P],onChange:function(e){return D(e[0])},direction:W.Direction.Up,renderTrack:function(e){var n=e.props,t=e.children;return(0,a.jsx)("div",X({},n,{style:X({},n.style,{width:"6px",borderRadius:"3px",height:"200px",backgroundColor:"#888"}),children:t}))},renderThumb:function(e){var n=e.props;return(0,a.jsx)("div",X({},n,{style:X({},n.style,{height:"24px",width:"24px",aspectRatio:"1",borderRadius:"50%",backgroundColor:"#337cff"})}))}})})]})})),re=t(7106),ie=t(3391);function ae(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}function oe(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,i,a=[],o=!0,s=!1;try{for(t=t.call(e);!(o=(r=t.next()).done)&&(a.push(r.value),!n||a.length!==n);o=!0);}catch(l){s=!0,i=l}finally{try{o||null==t.return||t.return()}finally{if(s)throw i}}return a}}(e,n)||function(e,n){if(!e)return;if("string"===typeof e)return ae(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(t);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return ae(e,n)}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var se=(0,B.Z)((function(e){var n=e.width,t=e.height,r=e.data,i=(e.events,e.margin,e.tooltipOpen,e.tooltipLeft,e.tooltipTop,e.tooltipData,e.showTooltip,e.hideTooltip,Math.min(n,t)/2*.95),o=.6*i,s=t/2,l=n/2;r.sort((function(e,n){return n.count-e.count}));r.reduce((function(e,n){return e+n.count}),0);var d=(0,A.Z)({domain:[r[0].count,0],range:["#337cff","#253758"]});return n<10?null:(0,a.jsx)("div",{style:{position:"relative"},children:(0,a.jsxs)("svg",{width:n,height:t,children:[(0,a.jsx)("rect",{x:0,y:0,width:n,height:t,fill:"#0000"}),(0,a.jsx)(S.Z,{top:s,left:l,children:(0,a.jsx)(ie.Z,{data:r,pieValue:function(e){return e.count},pieSortValues:function(e,n){return n-e},outerRadius:i,innerRadius:o,cornerRadius:3,padAngle:.005,children:function(e){return e.arcs.map((function(n,t){var r=n.data.user,i=oe(e.path.centroid(n),2),o=i[0],s=i[1],l=n.endAngle-n.startAngle>=.3,u=e.path(n),c=d(n.value);return(0,a.jsxs)("g",{children:[(0,a.jsx)("path",{onClick:function(){return alert(n.value)},d:u,fill:c}),l&&(0,a.jsx)("text",{x:o,y:s,dy:".33em",fill:"#ffffff",fontSize:15,textAnchor:"middle",pointerEvents:"none",children:n.data.user})]},"arc-".concat(r,"-").concat(t))}))}})})]})})}));function le(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}function de(e,n,t,r,i,a,o){try{var s=e[a](o),l=s.value}catch(d){return void t(d)}s.done?n(l):Promise.resolve(l).then(r,i)}function ue(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,i,a=[],o=!0,s=!1;try{for(t=t.call(e);!(o=(r=t.next()).done)&&(a.push(r.value),!n||a.length!==n);o=!0);}catch(l){s=!0,i=l}finally{try{o||null==t.return||t.return()}finally{if(s)throw i}}return a}}(e,n)||function(e,n){if(!e)return;if("string"===typeof e)return le(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(t);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return le(e,n)}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var ce=t(8509),fe=t(4704),pe=function(){var e=(0,l.useState)(),n=(e[0],e[1],(0,l.useState)()),t=n[0],r=n[1],o=(0,l.useState)(),d=o[0],u=o[1],c=(0,l.useState)(),p=c[0],h=c[1],m=(0,l.useState)(!1),y=m[0],x=m[1],_=(0,l.useState)(!1),k=_[0],S=_[1],T=ue(function(e){var n=(0,l.useState)(e),t=n[0],r=n[1],i=(0,l.useRef)(void 0),a=(0,l.useCallback)((function(e,n){i.current=n,r(e)}),[]);return(0,l.useEffect)((function(){i.current&&(i.current(t),i.current=void 0)}),[t]),[t,a]}({hourlyBars:[],dailyBars:[],dailyBoxes:[],hourlyBoxes:[],heatmapBins:[],pieChart:[]}),2),A=T[0],M=T[1];(0,l.useEffect)((function(){}),[y]);var O={dict_converter:Object.fromEntries,create_proxies:!1},P=(0,l.useRef)(null);return(0,l.useEffect)((function(){k&&P.current.scrollIntoView({behavior:"smooth"})}),[k]),(0,a.jsxs)("div",{className:v().container,children:[(0,a.jsxs)(s(),{children:[(0,a.jsx)("title",{children:"Chat Analyser"}),(0,a.jsx)("link",{rel:"icon",href:"/favicon.ico"})]}),(0,a.jsxs)("div",{className:"debug",style:{display:"none"},children:[(0,a.jsx)("p",{children:t}),(0,a.jsx)("p",{children:p}),(0,a.jsx)("p",{children:y?"true":"false"})]}),(0,a.jsxs)("main",{className:v().main,children:[y?(0,a.jsx)(g,{onFileAdded:function(e){return e.data.text().then(function(){var e,n=(e=i().mark((function e(n){var t,r,a,o,s,l,u,c,f,p,h,m,y,x,g,_,v,b,w,j,k,T,A,P,D,C,E,L,B,N,Z,I,F,z,H,R,U,q,V,J,Y,Q,W,$,K,X;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return d.current.globals.set("data",n),e.next=3,d.current.runPythonAsync(fe);case 3:for(t=[],r=!0,a=!1,o=void 0,e.prev=5,s=Object.entries(d.current.globals.get("dailyBox").toJs(O))[Symbol.iterator]();!(r=(l=s.next()).done);r=!0)u=ue(l.value,2),c=u[0],f=u[1],t.push({day:c,min:f.min,max:f.max,lwhisk:f.lwhisk,uwhisk:f.uwhisk,median:f["50%"],q1:f["25%"],q3:f["75%"],outliers:f.outliers});e.next=13;break;case 9:e.prev=9,e.t0=e.catch(5),a=!0,o=e.t0;case 13:e.prev=13,e.prev=14,r||null==s.return||s.return();case 16:if(e.prev=16,!a){e.next=19;break}throw o;case 19:return e.finish(16);case 20:return e.finish(13);case 21:for(p=[],h=!0,m=!1,y=void 0,e.prev=23,x=Object.entries(d.current.globals.get("hourlyBox").toJs(O))[Symbol.iterator]();!(h=(g=x.next()).done);h=!0)_=ue(g.value,2),v=_[0],b=_[1],p.push({hour:parseInt(v),min:b.min,max:b.max,lwhisk:b.lwhisk,uwhisk:b.uwhisk,median:b["50%"],q1:b["25%"],q3:b["75%"],outliers:b.outliers});e.next=31;break;case 27:e.prev=27,e.t1=e.catch(23),m=!0,y=e.t1;case 31:e.prev=31,e.prev=32,h||null==x.return||x.return();case 34:if(e.prev=34,!m){e.next=37;break}throw y;case 37:return e.finish(34);case 38:return e.finish(31);case 39:w=[],j=!0,k=!1,T=void 0,e.prev=41,A=Object.entries(d.current.globals.get("heatmapData").toJs(O))[Symbol.iterator]();case 43:if(j=(P=A.next()).done){e.next=67;break}for(D=ue(P.value,2),C=D[0],E=D[1],L=[],B=!0,N=!1,Z=void 0,e.prev=47,I=Object.entries(E)[Symbol.iterator]();!(B=(F=I.next()).done);B=!0)z=ue(F.value,2),H=z[0],R=z[1],L.push({hour:parseInt(H),count:parseInt(R)});e.next=55;break;case 51:e.prev=51,e.t2=e.catch(47),N=!0,Z=e.t2;case 55:e.prev=55,e.prev=56,B||null==I.return||I.return();case 58:if(e.prev=58,!N){e.next=61;break}throw Z;case 61:return e.finish(58);case 62:return e.finish(55);case 63:w.push({delay:C,bins:L});case 64:j=!0,e.next=43;break;case 67:e.next=73;break;case 69:e.prev=69,e.t3=e.catch(41),k=!0,T=e.t3;case 73:e.prev=73,e.prev=74,j||null==A.return||A.return();case 76:if(e.prev=76,!k){e.next=79;break}throw T;case 79:return e.finish(76);case 80:return e.finish(73);case 81:for(console.log(d.current.globals.get("usersData").toJs(O)),U=[],q=!0,V=!1,J=void 0,e.prev=84,Y=Object.entries(d.current.globals.get("usersData").toJs(O)[0])[Symbol.iterator]();!(q=(Q=Y.next()).done);q=!0)W=ue(Q.value,2),$=W[0],K=W[1],X=K,U.push({user:$,count:X});e.next=92;break;case 88:e.prev=88,e.t4=e.catch(84),V=!0,J=e.t4;case 92:e.prev=92,e.prev=93,q||null==Y.return||Y.return();case 95:if(e.prev=95,!V){e.next=98;break}throw J;case 98:return e.finish(95);case 99:return e.finish(92);case 100:M({hourlyBars:d.current.globals.get("hourlyBars").toJs(O),dailyBars:d.current.globals.get("dailyBars").toJs(O),dailyBoxes:t,hourlyBoxes:p,heatmapBins:w,pieChart:U},(function(e){console.log(e),S(!0)}));case 101:case"end":return e.stop()}}),e,null,[[5,9,13,21],[14,,16,20],[23,27,31,39],[32,,34,38],[41,69,73,81],[47,51,55,63],[56,,58,62],[74,,76,80],[84,88,92,100],[93,,95,99]])})),function(){var n=this,t=arguments;return new Promise((function(r,i){var a=e.apply(n,t);function o(e){de(a,r,i,o,s,"next",e)}function s(e){de(a,r,i,o,s,"throw",e)}o(void 0)}))});return function(e){return n.apply(this,arguments)}}())},currentMessage:void 0}):(0,a.jsx)(f,{condition:!0,message:p||""}),k?(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(j,{refProp:P,frontCard:(0,a.jsxs)("div",{style:{width:"100%",height:"100%"},children:[(0,a.jsx)("h2",{children:"Mean weekly messages"}),(0,a.jsx)(w.Z,{className:"card-graph",debounceTime:50,parentSizeStyles:{width:"100%",height:"calc(100% - 3.5em)"},children:function(e){return(0,a.jsx)(E,{width:e.width,height:e.height,data:A.dailyBars,labels:{x:"Day of the week",y:"Messages (Mean)"}})}})]}),backCard:(0,a.jsxs)("div",{style:{width:"100%",height:"100%"},children:[(0,a.jsx)("h2",{children:"Weekly messages distribution"}),(0,a.jsx)(w.Z,{className:"card-graph",debounceTime:50,parentSizeStyles:{width:"100%",height:"calc(100% - 3.5em)"},children:function(e){return(0,a.jsx)(q,{width:e.width,height:e.height,data:A.dailyBoxes,labels:{x:"Day of the week",y:"Messages (Mean)"}})}})]}),frontButton:"ADVANCED",backButton:"SIMPLE"}),(0,a.jsx)(j,{frontCard:(0,a.jsxs)("div",{style:{width:"100%",height:"100%"},children:[(0,a.jsx)("h2",{children:"Mean hourly messages"}),(0,a.jsx)(w.Z,{className:"card-graph",debounceTime:50,parentSizeStyles:{width:"100%",height:"calc(100% - 3.5em)"},children:function(e){return(0,a.jsx)(E,{width:e.width,height:e.height,data:A.hourlyBars,labels:{x:"Hour of the day",y:"Messages (Mean)"}})}})]}),backCard:(0,a.jsxs)("div",{style:{width:"100%",height:"100%"},children:[(0,a.jsx)("h2",{children:"Hourly messages distribution"}),(0,a.jsx)(w.Z,{className:"card-graph",debounceTime:50,parentSizeStyles:{width:"100%",height:"calc(100% - 3.5em)"},children:function(e){return(0,a.jsx)(q,{width:e.width,height:e.height,data:A.hourlyBoxes,labels:{x:"Day of the week",y:"Messages (Mean)"}})}})]}),frontButton:"ADVANCED",backButton:"SIMPLE"}),(0,a.jsx)(j,{frontCard:(0,a.jsxs)("div",{style:{width:"100%",height:"100%"},children:[(0,a.jsx)("h2",{children:"Response time between messages"}),(0,a.jsx)(w.Z,{className:"card-graph",debounceTime:50,parentSizeStyles:{width:"100%",height:"calc(100% - 3.5em)"},children:function(e){return(0,a.jsx)(te,{width:e.width,height:e.height,data:A.heatmapBins,labels:{x:"Day of the week",y:"Messages (Mean)"}})}})]}),backCard:(0,a.jsx)("div",{}),frontButton:(0,a.jsx)(re.pBF,{size:"1.2em"}),backButton:(0,a.jsx)(re.lhV,{size:"1.2em"})}),(0,a.jsx)(j,{frontCard:(0,a.jsxs)("div",{style:{width:"100%",height:"100%"},children:[(0,a.jsx)("h2",{children:"Total messages per user"}),(0,a.jsx)(w.Z,{className:"card-graph",debounceTime:50,parentSizeStyles:{width:"100%",height:"calc(100% - 3.5em)"},children:function(e){return(0,a.jsx)(se,{width:e.width,height:e.height,data:A.pieChart})}})]}),backCard:(0,a.jsx)("div",{}),frontButton:(0,a.jsx)(re.pBF,{size:"1.2em"}),backButton:(0,a.jsx)(re.lhV,{size:"1.2em"})})]}):null,(0,a.jsx)(b.default,{id:"a",pythonCode:ce,onPythonOutput:function(e,n){return r(e),u(n),x(!0)},currentStatus:function(e){h(e)}})]})]})}},2683:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return u}});var r=t(4051),i=t.n(r),a=t(5893),o=t(7294),s=t(6521);function l(e,n,t,r,i,a,o){try{var s=e[a](o),l=s.value}catch(d){return void t(d)}s.done?n(l):Promise.resolve(l).then(r,i)}function d(e){return function(){var n=this,t=arguments;return new Promise((function(r,i){var a=e.apply(n,t);function o(e){l(a,r,i,o,s,"next",e)}function s(e){l(a,r,i,o,s,"throw",e)}o(void 0)}))}}function u(e){e.id;var n=e.pythonCode,r=e.loadingMessage,l=void 0===r?"Loading Python...":r,u=e.evaluatingMessage,c=void 0===u?"Loading Python...":u,f=e.processingMessage,p=void 0===f?"Processing data...":f,h=e.onPythonOutput,m=e.currentStatus,y=(0,o.useContext)(s.PyodideContext),x=y.pyodide,g=y.hasLoadPyodideBeenCalled,_=y.isPyodideLoading,v=y.setIsPyodideLoading,b=(0,o.useState)(c),w=b[0],j=b[1];return(0,o.useEffect)((function(){g.current||(g.current=!0,d(i().mark((function e(){return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.g.loadPyodide({indexURL:"https://cdn.jsdelivr.net/pyodide/v0.20.0/full/"});case 2:x.current=e.sent,v(!1);case 4:case"end":return e.stop()}}),e)})))())}),[x,g,v]),(0,o.useEffect)((function(){if(!_){var e=function(){var e=d(i().mark((function e(n,t){return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,n.loadPackage("numpy");case 3:return e.next=5,n.loadPackage("pandas");case 5:return e.next=7,n.runPython(t);case 7:return e.abrupt("return",e.sent);case 10:return e.prev=10,e.t0=e.catch(0),console.error(e.t0),e.abrupt("return","Error evaluating Python code. See console for details.");case 14:case"end":return e.stop()}}),e,null,[[0,10]])})));return function(n,t){return e.apply(this,arguments)}}();d(i().mark((function t(){return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.t0=j,t.next=3,e(x.current,n);case 3:t.t1=t.sent,(0,t.t0)(t.t1);case 5:case"end":return t.stop()}}),t)})))()}}),[_,x,n]),(0,o.useEffect)((function(){w!==c&&h(w,x)}),[w]),(0,o.useEffect)((function(){m(_?l:w===c?c:p)}),[_,w]),(0,a.jsx)(a.Fragment,{})}},1633:function(e){e.exports={container:"Home_container__97eC3",main:"Home_main__OVLM4",footer:"Home_footer__zed0_",title:"Home_title__q0Qg4",description:"Home_description__JhekB",code:"Home_code__2i1pD",grid:"Home_grid__npx0i",card:"Home_card__K7aTN",logo:"Home_logo__FLQOc",section:"Home_section__EaDnq",details:"Home_details__5K8Ks",graph_title:"Home_graph_title__dS8Rf",graph:"Home_graph__xPcnL",radio_group:"Home_radio_group__Ad2OX"}},6658:function(e){e.exports={main:"Loading_main__aFt_f",message:"Loading_message__ndecB"}},8992:function(e){e.exports={message:"Uploader_message__3merB"}},8509:function(e){"use strict";e.exports="import numpy as np\nimport pandas as pd\n\ndef users(df):\n   df_users = df.groupby([\"user\"])\n   temp = []\n   for i, group in enumerate(df_users.groups):\n      temp.append(df_users.get_group(group))\n   return temp\n\ndef get_users(df):\n   df_users = df.groupby([\"user\"])\n   temp = []\n   print(\">->\")\n   for i, group in enumerate(df_users.groups):\n      print(group)\n      temp.append(group)\n   print(\">->\")      \n   return temp\n\ndef group_func(df_list, func):\n   temp = []\n   for e in df_list:\n      temp.append(func(e))\n   return temp\n\ndef timeline(df):\n  return df.resample(\"D\").count().drop(columns=[\"user\"])\n   \ndef daily(df):\n   df_daily = df.resample(\"D\").count()\n   df_daily['weekday'] = df_daily.index.day_name()\n   df_daily['day'] = df_daily.index\n   df_daily = df_daily.pivot(index='day', columns='weekday', values='user')\n   df_daily = df_daily[['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', ]]\n   # print(df_daily.columns)\n   return df_daily\n\ndef hourly(df):\n   df_hourly = df.resample(\"H\").count()\n   df_hourly['hour'] = df_hourly.index.hour\n   df_hourly['day'] = df_hourly.index\n   # df_hourly_mean = df_hourly.groupby(['hour']).mean()\n   df_hourly = df_hourly.pivot(index='day', columns='hour', values='user')\n   # df_hourly.iloc[0] = df_hourly.iloc[0].astype(object)\n   df_hourly.columns = df_hourly.columns.astype(str)\n   return df_hourly\n\ndef boxplot(df):\n   df_daily_stats = df.describe()\n   df_daily_stats.loc[\"iqr\"] = df_daily_stats.loc['75%'] - df_daily_stats.loc['25%']\n   df_daily_stats.loc[\"min\"] = df_daily_stats.loc['25%'] - 1.5 * df_daily_stats.loc['iqr']\n   df_daily_stats[df_daily_stats < 0] = 0\n   df_daily_stats.loc[\"max\"] = df_daily_stats.loc['75%'] + 1.5 * df_daily_stats.loc['iqr']\n   df_daily_outliers = df[(df > df_daily_stats.loc['max']) | (df < df_daily_stats.loc['min'])].dropna(how='all')\n   # print(df_daily_stats)\n   # print(df_daily_outliers)\n   outliers = df_daily_outliers.T.values.tolist()\n   outliers = [[x for x in y if not np.isnan(x)] for y in outliers]\n   df_daily_stats.loc[\"outliers\"] = outliers\n   # print(df_daily_stats)\n   return df_daily_stats\n\ndef mean(df):\n   df_daily_mean = df.describe()\n   return df_daily_mean.loc[[\"mean\"]]\n\ndef delay(df):\n   df['datetime'] = df.index\n   df['delta'] = (df['datetime'] - df['datetime'].shift()).fillna(pd.Timedelta(seconds=0))\n   df[\"delta\"] = df['delta'].dt.total_seconds().div(60).astype(int)\n   return df\n\ndef heatmap(df):\n   bins = [0, 1, 2, 5, 10, 30, 60, 120, 180]\n   names = ['0-1', \"1-2\", '2-5', \"5-10\", \"10-30\", \"30-60\", \"60-120\", \"120-180\", \"180+\"]\n   tags = [\"180+\", \"120-180\", \"60-120\", \"30-60\", \"10-30\", \"5-10\", '2-5', \"1-2\", '0-1']\n   d = dict(enumerate(names, 1))\n   df_delta = df\n   df_delta[\"hour\"] = df_delta.index.hour\n   df_delta[\"hour\"] = df_delta[\"hour\"].shift(1)\n   df_delta = df_delta.drop(['msg', 'datetime'], axis=1)\n   df_delta = df_delta.loc[df_delta[\"user\"].shift(1) != df_delta[\"user\"]]\n   df_delta['delta_rnd'] = np.vectorize(d.get)(np.digitize(df_delta['delta'], bins))\n   df_user = df_delta\n   df_user['count'] = 1\n   df2 = df_user.groupby(['delta_rnd','hour'], as_index=False).count()\n   df_p = pd.pivot_table(df2, 'count', 'delta_rnd', 'hour')\n   df_p = df_p.reindex(index=tags)\n   df_p.columns = df_p.columns.astype(str)\n   return df_p\n\ndef words(df):\n   total_str = \"\"\n   for val in df.msg:\n      val = str(val)\n      total_str += (val + \" \")\n   return total_str"},4704:function(e){"use strict";e.exports='#%% Code\r\nfrom datetime import datetime\r\nimport pandas as pd\r\nimport numpy as np\r\nfrom typing import Literal\r\n\r\ntemplates = {\r\n    "jp": "Y/M/D H:m - U: ",\r\n    "en-uk": "D/M/Y, H:m - U: ",\r\n}\r\n\r\n\r\ndef numBetween(num: str, min: int, max: int) -> bool:\r\n    if num.isnumeric():\r\n        return min <= int(num) <= max\r\n    else:\r\n        return False\r\n\r\n\r\ndef parse(data: str) -> list:\r\n    """\r\n    It takes a string of text, and returns a list of dictionaries, each dictionary containing the date,\r\n    time, username, and message length of a single message.\r\n    \r\n    :param data: str\r\n    :type data: str\r\n    """\r\n    default_template = ""\r\n    output = []\r\n    for line in data.splitlines():\r\n        line_output = {\r\n            "day": 0,\r\n            "month": 0,\r\n            "year": 0,\r\n            "hour": 0,\r\n            "minute": 0,\r\n            "user": "",\r\n            "msgLen": ""\r\n        }\r\n        # print(line)\r\n        for key in templates:\r\n            i = 0\r\n            j = 0\r\n            if (output != []) and (key != default_template):\r\n                continue\r\n            for char in templates[key]:\r\n                # print(char)\r\n                match char:\r\n                    # Two-digit day\r\n                    case "D":\r\n                        if numBetween(line[i:i + 2], 1, 31):\r\n                            line_output["day"] = line[i:i + 2]\r\n                            i += 2\r\n                        else:\r\n                            break\r\n                    # Two-digit month\r\n                    case "M":\r\n                        if numBetween(line[i:i + 2], 1, 12):\r\n                            line_output["month"] = line[i:i + 2]\r\n                            i += 2\r\n                        else:\r\n                            break\r\n                    # Four-digit year\r\n                    case "Y":\r\n                        if numBetween(line[i:i + 4], 1816, 3016):\r\n                            line_output["year"] = line[i:i + 4]\r\n                            i += 4\r\n                        else:\r\n                            break\r\n                    # Two-digit hour\r\n                    case "H":\r\n                        if numBetween(line[i:i + 2], 0, 23):\r\n                            line_output["hour"] = line[i:i + 2]\r\n                            i += 2\r\n                        else:\r\n                            break\r\n                    # Two-digit minute\r\n                    case "m":\r\n                        if numBetween(line[i:i + 2], 0, 59):\r\n                            line_output["minute"] = line[i:i + 2]\r\n                            i += 2\r\n                        else:\r\n                            break\r\n                    # Username\r\n                    case "U":\r\n                        if line.find(":", i) != -1:\r\n                            n = line.find(":", i)\r\n                            line_output["user"] = line[i:n]\r\n                            i = n\r\n                        else:\r\n                            line_output["user"] = "System message"\r\n                            j = len(templates[key])\r\n                            break\r\n                    # Everything else\r\n                    case _:\r\n                        if line[i] == char:\r\n                            i += 1\r\n                        else:\r\n                            break\r\n                j += 1\r\n            if j == len(templates[key]):\r\n                line_output["msgLen"] = len(line) - i\r\n                default_template = key\r\n        if default_template != "" \\\r\n                and line_output["user"] != "":\r\n            dt = datetime.strptime(str(line_output["day"]) + "-" +\r\n                                   str(line_output["month"]) + "-" +\r\n                                   str(line_output["year"]) + " " +\r\n                                   str(line_output["hour"]) + "-" +\r\n                                   str(line_output["minute"]), \'%d-%m-%Y %H-%M\')\r\n            line_output["datetime"] = dt.strftime(\'%Y-%m-%d %H:%M\')\r\n            line_output["count"] = 1\r\n            output.append(line_output)\r\n        elif line == data.splitlines()[-1]:\r\n            raise ValueError(\r\n                "This file was exported in an unsupported language.")\r\n    # print(output)\r\n    # print(len(output))\r\n    # print(default_template)\r\n    return output\r\n\r\n\r\ndef resample(data: list, td: pd.Timedelta):\r\n    df = pd.DataFrame(data)\r\n    df["datetime"] = pd.to_datetime(df["datetime"], format=\'%Y-%m-%d %H:%M\')\r\n    out = df.set_index("datetime").resample(td).count()\r\n    out = out[["count"]]\r\n    # print(df)\r\n    # print(out)\r\n    return out\r\n\r\nDATA_TYPES = Literal["raw", "bars", "box"]\r\n\r\n\r\ndef boxify(data: pd.DataFrame) -> pd.DataFrame:\r\n    df = data.describe(percentiles=[.25, .5, .75])\r\n    df.loc["iqr"] = df.loc[\'75%\'] - df.loc[\'25%\']\r\n\r\n    df.loc["lwhisk"] = df.loc[\'25%\'] - 1.5 * df.loc[\'iqr\']\r\n    def checkMin(r):\r\n        if r.loc["min"] >= (r.loc[\'25%\'] - 1.5 * r.loc[\'iqr\']):\r\n            return r.loc["min"]\r\n        else:\r\n            return r.loc[\'25%\'] - 1.5 * r.loc[\'iqr\']\r\n    df.loc["lwhisk"] = df.apply(checkMin, axis=0)\r\n\r\n    df.loc["uwhisk"] = df.loc[\'75%\'] + 1.5 * df.loc[\'iqr\']\r\n    def checkMax(r):\r\n        if r.loc["max"] <= (r.loc[\'75%\'] + 1.5 * r.loc[\'iqr\']):\r\n            return r.loc["max"]\r\n        else:\r\n            return r.loc[\'75%\'] + 1.5 * r.loc[\'iqr\']\r\n    df.loc["uwhisk"] = df.apply(checkMax, axis=0)\r\n\r\n    df[df < 0] = 0\r\n    df_outliers = data[(data > df.loc[\'uwhisk\']) | (data < df.loc[\'lwhisk\'])].dropna(how=\'all\')\r\n    outliers = df_outliers.T.values.tolist()\r\n    outliers = np.array([[x for x in y if not np.isnan(x)] for y in outliers], dtype=object)\r\n    df.loc["outliers"] = outliers\r\n    return df\r\n\r\ndef daily(data, group: DATA_TYPES):\r\n    data[\'weekday\'] = data.index.day_name()\r\n    data[\'day\'] = data.index\r\n    data = data.pivot(index=\'day\', columns=\'weekday\', values=\'count\')\r\n    data = data[[\'Sunday\', \'Monday\', \'Tuesday\', \'Wednesday\', \'Thursday\', \'Friday\', \'Saturday\', ]]\r\n    match group:\r\n        case "raw":\r\n            return data\r\n        case "bars":\r\n            return data.mean()\\\r\n                .rename_axis(\'day\')\\\r\n                .reset_index()\\\r\n                .rename(columns={0: "mean"})\r\n        case "box":\r\n            return boxify(data)\r\n\r\n\r\ndef hourly(data, group: DATA_TYPES):\r\n    data[\'hour\'] = data.index.hour\r\n    data[\'day\'] = data.index\r\n    data = data.pivot(index=\'day\', columns=\'hour\', values=\'count\')\r\n    match group:\r\n        case "raw":\r\n            return data\r\n        case "bars":\r\n            return data.mean()\\\r\n                .rename_axis(\'hour\')\\\r\n                .reset_index()\\\r\n                .rename(columns={0: "mean"})\r\n        case "box":\r\n            return boxify(data)\r\n\r\n\r\ndef heatmap(data):\r\n    bins = [0, 1, 2, 5, 10, 30, 60, 120, 180]\r\n    names = [\'0-1\', "1-2", \'2-5\', "5-10", "10-30", "30-60", "60-120", "120-180", "180+"]\r\n    tags = ["180+", "120-180", "60-120", "30-60", "10-30", "5-10", \'2-5\', "1-2", \'0-1\']\r\n    d = dict(enumerate(names, 1))\r\n    df = pd.DataFrame(data)\r\n    df["datetime"] = pd.to_datetime(df["datetime"], format=\'%Y-%m-%d %H:%M\')\r\n    df = df.set_index("datetime")\r\n    df[\'datetime\'] = df.index\r\n    df[\'delta\'] = (df[\'datetime\'] - df[\'datetime\'].shift()).fillna(pd.Timedelta(seconds=0))\r\n    df["delta"] = df[\'delta\'].dt.total_seconds().div(60).astype(int)\r\n    # return df\r\n    df["hour"] = df.index.hour\r\n    df["hour"] = df["hour"].shift(1)\r\n    df = df.drop([\'datetime\'], axis=1)\r\n    df = df.loc[df["user"].shift(1) != df["user"]]\r\n    df[\'delta_rnd\'] = np.vectorize(d.get)(np.digitize(df[\'delta\'], bins))\r\n    df_user = df\r\n    df_user[\'count\'] = 1\r\n    df2 = df_user.groupby([\'delta_rnd\',\'hour\'], as_index=False).count()\r\n    df_p = pd.pivot_table(df2, \'count\', \'delta_rnd\', \'hour\')\r\n    df_p = df_p.reindex(index=tags)\r\n    df_p.columns = df_p.columns.astype(int)\r\n\r\n    TEMP_COL_COUNTER = 0\r\n    for column in df_p:\r\n        if TEMP_COL_COUNTER != column:\r\n            df_p.insert(TEMP_COL_COUNTER, TEMP_COL_COUNTER, np.nan)\r\n            TEMP_COL_COUNTER += 1\r\n        TEMP_COL_COUNTER += 1\r\n    # df_p.iloc[:,5] = np.nan\r\n    df_p = df_p.replace(np.nan, 0)\r\n    return df_p.T\r\n\r\ndef users(data: list):\r\n    return pd.DataFrame(data).groupby([\'user\'], as_index=False).count()[["user", "count"]].set_index("user")\r\n\r\n\r\n\r\n\r\nresult = []\r\n\r\ndailyBars = None\r\ndailyBox = None\r\ndailyRaw = None\r\n\r\nhourlyBars = None\r\nhourlyBox = None\r\nhourlyRaw = None\r\n\r\nheatmapData = None\r\n\r\nusersData = None\r\n\r\n\r\ntry:\r\n    # file = open("text.txt", "r").read()\r\n    result = parse(data)\r\n    \r\n    # dailyBars = daily(resample(result, "D")).to_dict("records")\r\n    # hourlyBars = hourly(resample(result, "h")).to_dict("records")\r\n    # print(dailyBars)\r\n    \r\n    dailyBars = daily(resample(result, "D"), "bars").to_dict("records")\r\n    dailyBox = daily(resample(result, "D"), "box").to_dict("dict")\r\n    # dailyRaw = daily(resample(result, "D"), "raw").to_dict("records")\r\n    hourlyBars = hourly(resample(result, "h"), "bars").to_dict("records")\r\n    hourlyBox = hourly(resample(result, "h"), "box").to_dict("dict")\r\n    # hourlyRaw = hourly(resample(result, "h"), "raw").to_dict("records")\r\n    # print(dailyBars)\r\n    heatmapData = heatmap(result).to_dict("index")\r\n    usersData = users(result).T.to_dict("records")\r\nexcept ValueError:\r\n    print("ERROR")\r\n\r\n#%%\r\n'}},function(e){e.O(0,[907,717,774,888,179],(function(){return n=8312,e(e.s=n);var n}));var n=e.O();_N_E=n}]);